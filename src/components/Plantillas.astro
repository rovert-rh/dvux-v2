---
import Card from './Card.astro';
import data from '../Data/Data.json';

// Variables y estados iniciales
const itemsPerPage: number = 6;
let currentPage: number = 1;
let activeFilter: string = "Todos";

// Función para filtrar datos
const getFilteredData = (filter: string): typeof data => {
  if (filter === "Todos") {
    return data;
  }
  return data.filter((item) => item.category === filter);
};

// Filtrar y paginar los datos
const filteredData = getFilteredData(activeFilter);
const totalPages: number = Math.ceil(filteredData.length / itemsPerPage);
const paginatedData = filteredData.slice(
  (currentPage - 1) * itemsPerPage,
  currentPage * itemsPerPage
);

// Funciones para manejar los eventos de filtrado y paginación
const setFilter = (filter: string) => {
  activeFilter = filter;
  currentPage = 1; // Reinicia a la primera página
};

const changePage = (page: number) => {
  currentPage = page;
};
---

<section class="w-full flex justify-center">
  <section class="pt-20 pl-10 pr-10 pb-10 text-center lg:text-lg lg:w-3/4 xl:text-xl xl:w-3/4 2xl:w-1/2">
    <!-- Título y botones de filtro -->
    <div class="flex flex-col md:flex-row md:justify-between items-center mb-8 space-y-4 md:space-y-0">
      <h2 class="text-2xl font-bold text-white md:mr-32 text-center md:text-left">Todas las plantillas</h2>
      <!-- Botones de filtro -->
      <div class="flex flex-wrap gap-2 md:gap-4 justify-center md:justify-end">
        {["Todos", "UX/UI", "Plantillas Web", "Items"].map((filter) => (
          <button
            type="button"
            class={`py-2 px-6 rounded-lg font-semibold transition-all ${
              activeFilter === filter
                ? "bg-[#41B6A1] text-white border-[#41B6A1]"
                : "bg-[#6E29CC] text-white border-[#6E29CC]"
            }`}
            onclick={() => setFilter(filter)}
          >
            {filter}
          </button>
        ))}
      </div>
    </div>

    <!-- Renderizar las cards -->
    <div class="plantillas-section py-2 px-5">
      <div class="grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-3 gap-6">
        {paginatedData.length > 0 ? (
          paginatedData.map((template) => (
            <Card
              key={template.id}
              title={template.title}
              cost={template.cost}
              description={template.description}
              imageUrl={template.imageUrl}
              rating={template.rating}
              previewLink={template.previewLink}
              purchaseLink={template.purchaseLink}
            />
          ))
        ) : (
          <p class="text-white col-span-full">No hay plantillas disponibles.</p>
        )}
      </div>
    </div>

    <!-- Paginación -->
    <div class="flex justify-center mt-6 space-x-2">
      {Array.from({ length: totalPages }, (_, index) => index + 1).map((page) => (
        <button
          type="button"
          class={`py-2 px-4 rounded-lg font-semibold transition-all ${
            currentPage === page
              ? "bg-[#41B6A1] text-white"
              : "bg-[#6E29CC] text-white"
          }`}
          onClick={() => changePage(page)} 
        >
          {page}
        </button>
      ))}
    </div>
  </section>
</section>
